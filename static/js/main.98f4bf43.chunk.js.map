{"version":3,"sources":["CustomSlider.js","SliderGroup.js","fernDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["StyledSlider","withStyles","root","color","height","padding","thumb","width","valueLabel","left","top","background","track","rail","opacity","backgroundColor","mark","marginTop","Slider","CustomSlider","name","value","setValue","Grid","container","item","xs","marks","onChange","e","min","max","step","valueLabelDisplay","SliderGroup","Object","keys","filter","key","map","n","makePoints","options","point","x","y","i","func","r","Math","floor","random","functions","find","a","p","b","c","d","f","App","canvas","React","useRef","useState","row1","row1Set","row2","row2Set","row3","row3Set","row4","row4Set","useEffect","context","getContext","clearRect","fillRect","fernDrawer","current","Typography","spacing","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98f4bf43.chunk.js","sourcesContent":["import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst StyledSlider = withStyles({\r\n    root: {\r\n        color: '#3880ff',\r\n        height: 2,\r\n        padding: '0 0',\r\n    },\r\n    thumb: {\r\n        height: 11,\r\n        width: 11,\r\n    },\r\n    valueLabel: {\r\n        left: 16,\r\n        top: 0,\r\n        '& *': {\r\n            background: 'transparent',\r\n            color: '#000',\r\n        },\r\n    },\r\n    track: {\r\n        height: 2,\r\n    },\r\n    rail: {\r\n        height: 2,\r\n        opacity: 0.4,\r\n        backgroundColor: '#bfbfbf',\r\n    },\r\n    mark: {\r\n        backgroundColor: '#bfbfbf',\r\n        height: 8,\r\n        width: 1,\r\n        marginTop: -3,\r\n    },\r\n})(Slider);\r\n\r\nconst CustomSlider = ({ name, value, setValue }) => {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={1}>\r\n                {name}\r\n            </Grid>\r\n            <Grid item xs={11}>\r\n                <StyledSlider\r\n                    marks={[{ value: 0 }]}\r\n                    value={value} onChange={(e, value) => setValue(value)} min={-2.0} max={2.0} step={0.01} valueLabelDisplay='on' />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CustomSlider;\r\n","import React from 'react';\r\nimport CustomSlider from './CustomSlider';\r\n\r\nconst SliderGroup = ({ name, value, setValue }) => {\r\n    return (<>\r\n        {Object.keys(value).filter((key) => key !== 'p').map((key) => {\r\n            return (\r\n                <CustomSlider key={key} name={key} value={value[key]} setValue={(n) => setValue({ ...value, [key]: n })} />\r\n            );\r\n        })}\r\n    </>);\r\n}\r\n\r\nexport default SliderGroup;\r\n","function* makePoints(options) {\r\n    let point = { x: 0, y: 0 };\r\n\r\n    for (let i = 0; i < 10000; ++i) {\r\n        const r = Math.floor(Math.random() * 1000);\r\n        const func = options.functions.find(a => r <= a.p);\r\n\r\n        point = {\r\n            x: func.a * point.x + func.b * point.y + func.e,\r\n            y: func.c * point.x + func.d * point.y + func.f\r\n        }\r\n\r\n        yield { x: point.x * 60 + 225, y: options.height - point.y * 60 };\r\n    }\r\n}\r\n\r\nexport default function fernDrawer(canvas, options) {\r\n    const context = canvas.getContext('2d');\r\n    context.clearRect(0, 0, options.width, options.height);\r\n    for (let point of makePoints(options))\r\n        context.fillRect(point.x, point.y, 1, 1);\r\n}\r\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport SliderGroup from './SliderGroup';\nimport fernDrawer from './fernDrawer';\nimport Typography from '@material-ui/core/Typography';\n\nconst App = () => {\n  const width = 800;\n  const height = 600;\n  const canvas = React.useRef(null);\n\n  const [row1, row1Set] = React.useState({ a: 0.0, b: 0.0, c: 0.0, d: 0.16, e: 0.0, f: 0.0, p: 10 });\n  const [row2, row2Set] = React.useState({ a: 0.85, b: 0.04, c: -0.04, d: 0.85, e: 0.0, f: 1.60, p: 860 });\n  const [row3, row3Set] = React.useState({ a: 0.20, b: -0.26, c: 0.23, d: 0.22, e: 0.0, f: 1.60, p: 930 });\n  const [row4, row4Set] = React.useState({ a: -0.15, b: 0.28, c: 0.26, d: 0.24, e: 0.0, f: 0.44, p: 1000 });\n\n  React.useEffect(() => {\n    const options = { width, height, functions: [row1, row2, row3, row4] };\n    fernDrawer(canvas.current, options);\n  });\n\n  return (\n    <>\n      <Typography>\n        Barnsley's Fern Generator\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={5}>\n          <SliderGroup name='func1' value={row1} setValue={row1Set} />\n          <SliderGroup name='funс2' value={row2} setValue={row2Set} />\n          <SliderGroup name='func3' value={row3} setValue={row3Set} />\n          <SliderGroup name='func4' value={row4} setValue={row4Set} />\n        </Grid>\n        <Grid item xs={7}>\n          <canvas ref={canvas} width={width} height={height} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}